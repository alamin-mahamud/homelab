name: HomeLab CI/CD Pipeline

on:
  workflow_dispatch
  # push:
  #   branches:
  #     - main
  # pull_request:
  #   branches:
  #     - main

jobs:
  terraform:
    runs-on: ubuntu-latest
    outputs:
      tf_output: ${{ steps.save_output.outputs.tf_json }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Format and Validate
        run: |
          terraform fmt -check
          terraform validate
        working-directory: ./terraform

      - name: Terraform Plan
        run: terraform plan -out=plan.out
        working-directory: ./terraform

      - name: Terraform Apply
        if: github.event_name == 'push'
        run: terraform apply -auto-approve plan.out
        working-directory: ./terraform

      - name: Save Terraform Output
        id: save_output
        run: |
          terraform output -json > ../tf-output.json
          echo "::set-output name=tf_json::$(cat ../tf-output.json)"
        working-directory: ./terraform

  # ansible:
  #   runs-on: ubuntu-latest
  #   needs: terraform
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3

  #     - name: Install Ansible and jq
  #       run: sudo apt-get update && sudo apt-get install -y ansible jq

  #     - name: Generate Ansible Inventory
  #       run: |
  #         # Extract server IP from Terraform output JSON
  #         SERVER_IP=$(jq -r '.server_ip.value' ../tf-output.json)
  #         echo "[homelab]" > ansible/inventory/hosts
  #         echo "$SERVER_IP ansible_user=ubuntu" >> ansible/inventory/hosts
  #       shell: bash

  #     - name: Run Ansible Playbook
  #       run: ansible-playbook -i ansible/inventory/hosts ansible/playbooks/base.yml
